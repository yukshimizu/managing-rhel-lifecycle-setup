---
- name: Delete a Virtual Private Cloud (VPC)
  hosts: localhost
  gather_facts: false
  vars:
    aws_region: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"

  tasks:
    - name: Fail if variables not defined
      ansible.builtin.assert:
        that:
          - aws_vpc is defined
          - aws_igw_name is defined
          - purpose is defined
        fail_msg: "Required variables not set"

    - name: Get vpc info
      amazon.aws.ec2_vpc_net_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ aws_vpc }}"
      register: vpc_results

    - name: Set vpc fact
      ansible.builtin.set_fact:
        vpc_id: "{{ vpc_results.vpcs[0].id }}"

    - name: Delete gateway
      block:
        - name: Get gateway info
          amazon.aws.ec2_vpc_igw_info:
            filters:
              "tag:Name": "{{ aws_igw_name }}"
              "tag:purpose": "{{ purpose }}"
            region: "{{ aws_region }}"
          register: igws

        - name: Delete gateway
          amazon.aws.ec2_vpc_igw:
            region: "{{ aws_region }}"
            state: absent
            vpc_id: "{{ item.attachments[0].vpc_id }}"
          loop: "{{ igws.internet_gateways }}"
          when: igws.internet_gateways is defined and (igws.internet_gateways | length > 0)

    - name: Delete route tables
      block:
        - name: Get route tables
          amazon.aws.ec2_vpc_route_table_info:
            filters:
              vpc-id: "{{ item.id }}"
              association.main: false
            region: "{{ aws_region }}"
          loop: "{{ vpc_results.vpcs }}"
          register: route_table_results
          when: vpc_results.vpcs is defined and (vpc_results.vpcs | length > 0)

        - name: Delete route tables
          amazon.aws.ec2_vpc_route_table:
            lookup: id
            region: "{{ aws_region }}"
            route_table_id: "{{ item.1.id }}"
            state: absent
            vpc_id: "{{ item.1.vpc_id }}"
          loop: "{{ route_table_results.results | subelements('route_tables', 'skip_missing=True') }}"
          when: route_table_results.results is defined and (route_table_results.results | length > 0)

    - name: Delete subnets
      block:
        - name: Get all vpc subnets
          amazon.aws.ec2_vpc_subnet_info:
            filters:
              vpc-id: "{{ item.id }}"
            region: "{{ aws_region }}"
          loop: "{{ vpc_results.vpcs }}"
          register: subnet_results
          when: vpc_results.vpcs is defined and (vpc_results.vpcs | length > 0)

        - name: Delete subnets
          amazon.aws.ec2_vpc_subnet:
            cidr: "{{ item.1.cidr_block }}"
            state: absent
            region: "{{ aws_region }}"
            vpc_id: "{{ item.1.vpc_id }}"
          loop: "{{ subnet_results.results | subelements('subnets', 'skip_missing=True') }}"
          when: subnet_results.results is defined and (subnet_results.results | length > 0)

    - name: Delete Security Groups
      block:
        - name: Get Security Groups
          amazon.aws.ec2_security_group_info:
            filters:
              vpc-id: "{{ item.id }}"
              "tag:purpose": "{{ purpose }}"
            region: "{{ aws_region }}"
          loop: "{{ vpc_results.vpcs }}"
          register: security_groups
          when: vpc_results.vpcs is defined and (vpc_results.vpcs | length > 0)

        - name: Delete Security Groups
          amazon.aws.ec2_security_group:
            group_id: "{{ item.1.group_id }}"
            region: "{{ aws_region }}"
            state: absent
          loop: "{{ security_groups.results | subelements('security_groups', 'skip_missing=True') }}"
          when: security_groups.results is defined and (security_groups.results | length > 0)

    - name: Delete vpc
      amazon.aws.ec2_vpc_net:
        cidr_block: "{{ item.cidr_block }}"
        name: "{{ item.tags.Name }}"
        purge_tags: false
        region: "{{ aws_region }}"
        state: absent
      loop: "{{ vpc_results.vpcs }}"
      when: vpc_results.vpcs is defined and (vpc_results.vpcs | length > 0)
    