---
# tasks file for aac

- name: Fail if variables not defined
  ansible.builtin.assert:
    that:
      - aac_private_dns_name is defined
      - aac_local_installer_path is defined
      - aac_installer_dest_path is defined
      - aac_admin_passwd is defined
      - aac_pg_passwd is defined
      - aac_local_manifest_path is defined
      - aac_manifest_path is defined
    fail_msg: "Required variables not set"

- name: Copy and extract the AAP installer file
  ansible.builtin.unarchive:
    src: "{{ aac_local_installer_path }}"
    dest: /root

- name: Insert automationcontroller of inventory
  ansible.builtin.lineinfile:
    path: "/root/{{ aac_installer_dest_path }}/inventory"
    insertafter: '^\[automationcontroller\]'
    line: "{{ aac_private_dns_name }} ansible_connection=local"

- name: Modify admin_password of inventory
  ansible.builtin.lineinfile:
    path: "/root/{{ aac_installer_dest_path }}/inventory"
    regexp: '^admin_password='
    line: "admin_password='{{ aac_admin_passwd }}'"

- name: Modify pg_password of inventory
  ansible.builtin.lineinfile:
    path: "/root/{{ aac_installer_dest_path }}/inventory"
    regexp: '^pg_password='
    line: "pg_password='{{ aac_pg_passwd }}'"

- name: Modify registry_username of inventory
  ansible.builtin.lineinfile:
    path: "/root/{{ aac_installer_dest_path }}/inventory"
    regexp: '^registry_username='
    line: "registry_username='{{ rhsm_username }}'"

- name: Modify registry_password of inventory
  ansible.builtin.lineinfile:
    path: "/root/{{ aac_installer_dest_path }}/inventory"
    regexp: '^registry_password='
    line: "registry_password='{{ rhsm_passwd }}'"

- name: Register to Red Hat Subscription Management
  redhat.rhel_system_roles.redhat_subscription:
    state: present
    username: "{{ rhsm_username }}"
    password: "{{ rhsm_passwd }}"

- name: Patch rhsm config
  ansible.builtin.command: subscription-manager config --rhsm.manage_repos=1
  register: cmd_output
  changed_when: cmd_output.rc == 0

- name: Refresh rhsm config
  ansible.builtin.command: subscription-manager refresh
  register: cmd_output
  changed_when: cmd_output.rc == 0
  notify: Dnf clean

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Update all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest
    update_only: true

- name: Run the AAP installer setup.sh (it will take 20-30 mins)
  ansible.builtin.command: "/root/{{ aac_installer_dest_path }}/setup.sh"
  register: cmd_output
  changed_when: cmd_output.rc == 0

- name: Copy a manifest file
  ansible.builtin.copy:
    src: "{{ aac_local_manifest_path }}"
    dest: "{{ aac_manifest_path }}"
    mode: '0644'

- name: Upload the manifest
  awx.awx.license:
    controller_host: "https://{{ inventory_hostname }}"
    controller_username: admin
    controller_password: "{{ aac_admin_passwd }}"
    manifest: "{{ aac_manifest_path }}"
    validate_certs: false
